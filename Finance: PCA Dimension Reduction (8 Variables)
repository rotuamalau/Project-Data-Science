library(openxlsx)

#Memanggil dataset
cslarge_raw <- read.xlsx("https://storage.googleapis.com/dqlab-dataset/dqlab_pcadata.xlsx", sheet = "cslarge")

# 1. EDA DENGAN STATISTIKA DESKRIPTIF

#Struktur Dataset
str(cslarge_raw)
head(cslarge_raw)
summary(cslarge_raw)

#Distribusi income dan dependents
library(ggplot2)
ggplot(cslarge_raw, aes(as.factor(dependents), debt)) +
  geom_boxplot() + xlab("Dependents") + 
  ggtitle("Boxplot Debt Berdasarkan Dependents")

# 2. MEMBAGI DATASET MENJADI TRAINING SET DAN TESTING SET
#mencatat indeks tiap riskrating 
index1 <- which(cslarge_raw$riskrating == 1)
index2 <- which(cslarge_raw$riskrating == 2)
index3 <- which(cslarge_raw$riskrating == 3)
index4 <- which(cslarge_raw$riskrating == 4)
index5 <- which(cslarge_raw$riskrating == 5)

#Training dataset: yang digunakan 80% data
ntrain1 <- round(0.8 * length(index1))
ntrain2 <- round(0.8 * length(index2))
ntrain3 <- round(0.8 * length(index3))
ntrain4 <- round(0.8 * length(index4))
ntrain5 <- round(0.8 * length(index5))

#set.seed agar sampling bisa di reproduksi
set.seed(100)

#sampling dataset masing-masing rating untuk training set
train1_index <- sample(index1, ntrain1)
train2_index <- sample(index2, ntrain2)
train3_index <- sample(index3, ntrain3)
train4_index <- sample(index4, ntrain4)
train5_index <- sample(index5, ntrain5)

#menyimpan data ke dalam testing set
test1_index <- setdiff(index1, ntrain1)
test2_index <- setdiff(index2, ntrain2)
test3_index <- setdiff(index3, ntrain3)
test4_index <- setdiff(index4, ntrain4)
test5_index <- setdiff(index5, ntrain5)

#Menggabungkan hasil sampling masing-masing riskrating ke dalam training set
cslarge_train <- do.call("rbind", list(cslarge_raw[train1_index,], cslarge_raw[train2_index,], cslarge_raw[train3_index,],
                                       cslarge_raw[train4_index,], cslarge_raw[train5_index,]))
cstrain <- subset(cslarge_train, select = -c(contractcode, riskrating))

#Menggabungkan hasil sampling masing-masing riskrating ke dalam testing set
cslarge_test <- do.call("rbind", list(cslarge_raw[test1_index,], cslarge_raw[test2_index,],
                                      cslarge_raw[test3_index,], cslarge_raw[test4_index,],
                                      cslarge_raw[test5_index,]))
cstest <- subset(cslarge_test, select = -c(contractcode, riskrating))

#Menghitung korelasi antar variabel
cor(cstrain)

#Menggambarkan korelasi
library(ggcorrplot)
ggcorrplot(cor(cstrain))

# 3. MENERAPKAN PCA
#Analisa PCA dengan fungsi prcromp()
pr.out <- prcomp(cstrain, scale. = TRUE, center = TRUE)
pr.out

#struktur dataset PCA
summary(cstrain)

# 4. DATA VISUALISASI
#Fungsi Screeplot() untuk biplot
screeplot(pr.out, type = "line", ylim = c(0,2))
abline(h=1, lty= 3, col="red")
biplot(pr.out, scale = 0)

#Principal Component dan risk rating dengan autoplot (ggfortify)
library(ggfortify)
autoplot(pr.out, data = cslarge_train, colour = 'riskrating', loadings= TRUE, 
         loadings.label= TRUE, loadings.label.size= 3, scale = 0)

#Principal Component dan risk rating dengan fviz_pca_ind (factoextra) 
library(factoextra)
fviz_pca_ind(pr.out, label= "none", habillage = cslarge_train$riskrating)
